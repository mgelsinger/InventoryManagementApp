# Generated by Django 4.2.7 on 2025-08-16 01:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_tag', models.CharField(help_text='Unique asset identifier', max_length=50, unique=True)),
                ('serial_number', models.CharField(blank=True, help_text='Device serial number', max_length=100)),
                ('model', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Under Maintenance'), ('retired', 'Retired'), ('lost', 'Lost/Stolen')], default='active', max_length=20)),
                ('condition', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('broken', 'Broken')], default='good', max_length=20)),
                ('specifications', models.JSONField(blank=True, default=dict, help_text='Technical specifications as JSON')),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('warranty_expiry', models.DateField(blank=True, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='device_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_maintenance', models.DateTimeField(blank=True, null=True)),
                ('next_maintenance', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_devices', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='inventory.category')),
            ],
            options={
                'ordering': ['asset_tag'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('building', models.CharField(blank=True, max_length=100)),
                ('floor', models.CharField(blank=True, max_length=20)),
                ('room', models.CharField(blank=True, max_length=50)),
                ('address', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('website', models.URLField(blank=True)),
                ('address', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Computer',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.device')),
                ('computer_type', models.CharField(choices=[('desktop', 'Desktop'), ('laptop', 'Laptop'), ('server', 'Server'), ('workstation', 'Workstation'), ('thin_client', 'Thin Client')], default='desktop', max_length=20)),
                ('operating_system', models.CharField(blank=True, max_length=100)),
                ('os_version', models.CharField(blank=True, max_length=50)),
                ('processor', models.CharField(blank=True, max_length=100)),
                ('memory_gb', models.PositiveIntegerField(blank=True, null=True)),
                ('storage_gb', models.PositiveIntegerField(blank=True, null=True)),
                ('hostname', models.CharField(blank=True, max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('mac_address', models.CharField(blank=True, max_length=17)),
                ('domain_joined', models.BooleanField(default=False)),
                ('domain_name', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Computer',
                'verbose_name_plural': 'Computers',
            },
            bases=('inventory.device',),
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.device')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('mac_address', models.CharField(blank=True, max_length=17)),
                ('hostname', models.CharField(blank=True, max_length=100)),
                ('network_segment', models.CharField(blank=True, max_length=50)),
                ('is_managed', models.BooleanField(default=False)),
                ('management_ip', models.GenericIPAddressField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Network Device',
                'verbose_name_plural': 'Network Devices',
            },
            bases=('inventory.device',),
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('version', models.CharField(blank=True, max_length=50)),
                ('license_type', models.CharField(choices=[('perpetual', 'Perpetual'), ('subscription', 'Subscription'), ('trial', 'Trial'), ('open_source', 'Open Source')], default='perpetual', max_length=20)),
                ('license_key', models.CharField(blank=True, max_length=200)),
                ('license_expiry', models.DateField(blank=True, null=True)),
                ('seats', models.PositiveIntegerField(default=1, help_text='Number of licenses/seats')),
                ('used_seats', models.PositiveIntegerField(default=0)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='software', to='inventory.vendor')),
            ],
            options={
                'verbose_name_plural': 'Software',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(choices=[('preventive', 'Preventive Maintenance'), ('corrective', 'Corrective Maintenance'), ('upgrade', 'Upgrade'), ('inspection', 'Inspection')], max_length=20)),
                ('description', models.TextField()),
                ('scheduled_date', models.DateTimeField(blank=True, null=True)),
                ('performed_date', models.DateTimeField(blank=True, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('parts_used', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='inventory.device')),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.vendor')),
            ],
            options={
                'ordering': ['-performed_date', '-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='InventoryAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_type', models.CharField(choices=[('physical', 'Physical Audit'), ('system', 'System Audit'), ('compliance', 'Compliance Audit')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conducted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.AddField(
            model_name='device',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devices', to='inventory.location'),
        ),
        migrations.AddField(
            model_name='device',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devices', to='inventory.vendor'),
        ),
        migrations.CreateModel(
            name='SoftwareInstallation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installed_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='software_installations', to='inventory.device')),
                ('installed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('software', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installations', to='inventory.software')),
            ],
            options={
                'ordering': ['-installed_date'],
                'unique_together': {('device', 'software')},
            },
        ),
        migrations.CreateModel(
            name='Peripheral',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.device')),
                ('peripheral_type', models.CharField(choices=[('monitor', 'Monitor'), ('keyboard', 'Keyboard'), ('mouse', 'Mouse'), ('printer', 'Printer'), ('scanner', 'Scanner'), ('speaker', 'Speaker'), ('headset', 'Headset'), ('webcam', 'Webcam'), ('other', 'Other')], default='other', max_length=20)),
                ('connected_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='peripherals', to='inventory.computer')),
            ],
            options={
                'verbose_name': 'Peripheral',
                'verbose_name_plural': 'Peripherals',
            },
            bases=('inventory.device',),
        ),
        migrations.CreateModel(
            name='AuditItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('found', models.BooleanField(default=False)),
                ('condition', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('broken', 'Broken')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('audited_at', models.DateTimeField(auto_now_add=True)),
                ('actual_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_findings', to='inventory.location')),
                ('audit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_items', to='inventory.inventoryaudit')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.device')),
                ('expected_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.location')),
            ],
            options={
                'ordering': ['audited_at'],
                'unique_together': {('audit', 'device')},
            },
        ),
    ]
